{"version":3,"sources":["webpack:///./src/components/card.js","webpack:///./src/components/articles.js","webpack:///./src/templates/category.js"],"names":["Card","article","to","node","slug","className","fixed","image","childImageSharp","imgStyle","position","id","category","name","title","data-uk-grid","author","picture","borderRadius","Articles","articles","leftArticlesCount","Math","ceil","length","leftArticles","slice","rightArticles","map","i","key","Category","data","edges","seo","metaTitle","metaDescription"],"mappings":"qJA6CeA,EAzCF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,OACE,kBAAC,OAAD,CAAMC,GAAE,YAAcD,EAAQE,KAAKC,KAAQC,UAAU,iBACnD,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CACEC,MAAOL,EAAQE,KAAKI,MAAMC,gBAAgBF,MAC1CG,SAAU,CAAEC,SAAU,aAG1B,yBAAKL,UAAU,gBACb,uBAAGM,GAAG,WAAWN,UAAU,qBACxBJ,EAAQE,KAAKS,SAASC,MAEzB,uBAAGF,GAAG,QAAQN,UAAU,iBACrBJ,EAAQE,KAAKW,OAEhB,6BACE,wBAAIT,UAAU,qBACd,yBAAKA,UAAU,6BAA6BU,eAAa,QACvD,6BACGd,EAAQE,KAAKa,OAAOC,SACnB,kBAAC,IAAD,CACEX,MAAOL,EAAQE,KAAKa,OAAOC,QAAQT,gBAAgBF,MACnDG,SAAU,CAAEC,SAAU,SAAUQ,aAAc,UAIpD,yBAAKb,UAAU,mBACb,uBAAGA,UAAU,2BACVJ,EAAQE,KAAKa,OAAOH,aCIxBM,IAnCE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACZC,EAAoBC,KAAKC,KAAKH,EAASI,OAAS,GAChDC,EAAeL,EAASM,MAAM,EAAGL,GACjCM,EAAgBP,EAASM,MAAML,EAAmBD,EAASI,QAEjE,OACE,6BACE,yBAAKnB,UAAU,uBAAuBU,eAAa,QACjD,6BACGU,EAAaG,KAAI,SAAC3B,EAAS4B,GAC1B,OACE,kBAAC,EAAD,CACE5B,QAASA,EACT6B,IAAG,kBAAoB7B,EAAQE,KAAKC,WAK5C,6BACE,yBAAKC,UAAU,qCAAqCU,gBAAA,GACjDY,EAAcC,KAAI,SAAC3B,EAAS4B,GAC3B,OACE,kBAAC,EAAD,CACE5B,QAASA,EACT6B,IAAG,mBAAqB7B,EAAQE,KAAKC,gB,kCC3BvD,wDA+De2B,UApBE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZZ,EAAWY,EAAKZ,SAASa,MACzBrB,EAAWoB,EAAKpB,SAASC,KACzBqB,EAAM,CACVC,UAAWvB,EACXwB,gBAAgB,OAAQxB,EAAT,aAGjB,OACE,kBAAC,IAAD,CAAQsB,IAAKA,GACX,yBAAK7B,UAAU,cACb,yBAAKA,UAAU,mCACb,4BAAKO,GACL,kBAAC,IAAD,CAAmBQ,SAAUA","file":"component---src-templates-category-js-c9173c9097c18acf34a7.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst Card = ({ article }) => {\n  return (\n    <Link to={`/article/${article.node.slug}`} className=\"uk-link-reset\">\n      <div className=\"uk-card uk-card-muted\">\n        <div className=\"uk-card-media-top\">\n          <Img\n            fixed={article.node.image.childImageSharp.fixed}\n            imgStyle={{ position: \"static\" }}\n          />\n        </div>\n        <div className=\"uk-card-body\">\n          <p id=\"category\" className=\"uk-text-uppercase\">\n            {article.node.category.name}\n          </p>\n          <p id=\"title\" className=\"uk-text-large\">\n            {article.node.title}\n          </p>\n          <div>\n            <hr className=\"uk-divider-small\" />\n            <div className=\"uk-grid-small uk-flex-left\" data-uk-grid=\"true\">\n              <div>\n                {article.node.author.picture && (\n                  <Img\n                    fixed={article.node.author.picture.childImageSharp.fixed}\n                    imgStyle={{ position: \"static\", borderRadius: \"50%\" }}\n                  />\n                )}\n              </div>\n              <div className=\"uk-width-expand\">\n                <p className=\"uk-margin-remove-bottom\">\n                  {article.node.author.name}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default Card;","import React from \"react\";\nimport Card from \"./card\";\n\nconst Articles = ({ articles }) => {\n  const leftArticlesCount = Math.ceil(articles.length / 5);\n  const leftArticles = articles.slice(0, leftArticlesCount);\n  const rightArticles = articles.slice(leftArticlesCount, articles.length);\n\n  return (\n    <div>\n      <div className=\"uk-child-width-1-2@s\" data-uk-grid=\"true\">\n        <div>\n          {leftArticles.map((article, i) => {\n            return (\n              <Card\n                article={article}\n                key={`article__left__${article.node.slug}`}\n              />\n            );\n          })}\n        </div>\n        <div>\n          <div className=\"uk-child-width-1-2@m uk-grid-match\" data-uk-grid>\n            {rightArticles.map((article, i) => {\n              return (\n                <Card\n                  article={article}\n                  key={`article__right__${article.node.slug}`}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Articles;","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport ArticlesComponent from \"../components/articles\";\nimport Layout from \"../components/layout\";\n\nexport const query = graphql`\n  query Category($slug: String!) {\n    articles: allStrapiArticle(\n      filter: { status: { eq: \"published\" }, category: { slug: { eq: $slug } } }\n    ) {\n      edges {\n        node {\n          slug\n          title\n          category {\n            name\n          }\n          image {\n            childImageSharp {\n              fixed(width: 660) {\n                src\n              }\n            }\n          }\n          author {\n            name\n            picture {\n              childImageSharp {\n                fixed(width: 30, height: 30) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    category: strapiCategory(slug: { eq: $slug }) {\n      name\n    }\n  }\n`;\n\nconst Category = ({ data }) => {\n  const articles = data.articles.edges;\n  const category = data.category.name;\n  const seo = {\n    metaTitle: category,\n    metaDescription: `All ${category} articles`,\n  };\n\n  return (\n    <Layout seo={seo}>\n      <div className=\"uk-section\">\n        <div className=\"uk-container uk-container-large\">\n          <h1>{category}</h1>\n          <ArticlesComponent articles={articles} />\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Category;"],"sourceRoot":""}